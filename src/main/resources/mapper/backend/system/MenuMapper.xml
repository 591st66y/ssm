<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coderman.backend.system.mapper.MenuMapper">

  <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

  <resultMap id="BaseResultMap" type="com.coderman.backend.system.model.Menu">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="order_num" jdbcType="BIGINT" property="orderNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.coderman.backend.system.model.Menu">
    <result column="perms" jdbcType="LONGVARCHAR" property="perms" />
  </resultMap>
  <sql id="Base_Column_List">
    id, parent_id, menu_name, url, icon, type, order_num, create_time, modify_time
  </sql>
  <sql id="Blob_Column_List">
    perms
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_menu
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_menu
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.coderman.backend.system.model.Menu">
    insert into t_menu (id, parent_id, menu_name,
      url, icon, type, order_num,
      create_time, modify_time, perms
      )
    values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{menuName,jdbcType=VARCHAR},
      #{url,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, #{orderNum,jdbcType=BIGINT},
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{perms,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.coderman.backend.system.model.Menu">
    insert into t_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="menuName != null">
        menu_name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="perms != null">
        perms,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="menuName != null">
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="perms != null">
        #{perms,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.coderman.backend.system.model.Menu">
    update t_menu
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="menuName != null">
        menu_name = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="perms != null">
        perms = #{perms,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.coderman.backend.system.model.Menu">
    update t_menu
    set parent_id = #{parentId,jdbcType=BIGINT},
      menu_name = #{menuName,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      order_num = #{orderNum,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      perms = #{perms,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coderman.backend.system.model.Menu">
    update t_menu
    set parent_id = #{parentId,jdbcType=BIGINT},
      menu_name = #{menuName,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      order_num = #{orderNum,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getUserMenus" resultMap="BaseResultMap" useCache="false">
        SELECT
            m.*
        FROM
            t_menu m
        WHERE
            m.type &lt;&gt; 1
        AND m.id IN (
            SELECT DISTINCT
                rm.menu_id
            FROM
                t_role_menu rm
            LEFT JOIN t_role r ON (rm.role_id = r.id)
            LEFT JOIN t_user_role ur ON (ur.role_id = r.id)
            LEFT JOIN t_user u ON (u.id = ur.user_id)
            WHERE
                u.username = #{username}
        )
        ORDER BY
          m.order_num
    </select>

  <select id="selectAll" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List" />
    FROM t_menu
    ORDER BY
    order_num
  </select>

  <select id="checkByMenuName" resultType="int">
    select IFNULL(count(1),0)
    from t_menu
    <where>
      <if test="menuName!=null and menuName!=''">
        and menu_name=#{menuName}
      </if>
      <if test="id!=null">
        and id !=#{id}
      </if>
    </where>
  </select>
  <select id="selectAllNextIdList" parameterType="Long" resultType="java.lang.Long" >
    select id
    from t_menu
    where parent_id=#{menuId}
  </select>
  <select id="checkParentMenu" resultType="int">
     select IFNULL(count(1),0)
     from t_menu
     where parent_id=#{id}
  </select>

  <select id="findUserPermissions" resultMap="ResultMapWithBLOBs" useCache="false">
        SELECT
            m.perms
        FROM
            t_role r
        LEFT JOIN t_user_role ur ON (r.id = ur.role_id)
        LEFT JOIN t_user u ON (u.id = ur.user_id)
        LEFT JOIN t_role_menu rm ON (rm.role_id = r.id)
        LEFT JOIN t_menu m ON (m.id = rm.menu_id)
        WHERE
            u.username = #{username}
        AND m.perms is not null
        AND m.perms &lt;&gt; ''
    </select>

</mapper>
