<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coderman.backend.system.mapper.UserMapper">

    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

    <resultMap id="BaseResultMap" type="com.coderman.backend.system.model.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="sex" jdbcType="CHAR" property="sex"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="dept_id" jdbcType="BIGINT" property="deptId"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, password, salt, email, mobile, status, create_time, modify_time,
    last_login_time, sex, avatar, description, dept_id, type
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey"  parameterType="java.lang.Long">
    delete from t_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.coderman.backend.system.model.User" keyProperty="id" useGeneratedKeys="true">
    insert into t_user (id, username, password,
      salt, email, mobile,
      status, create_time, modify_time,
      last_login_time, sex, avatar,
      description, dept_id, type
      )
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{salt,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
      #{status,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP},
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{sex,jdbcType=CHAR}, #{avatar,jdbcType=VARCHAR},
      #{description,jdbcType=VARCHAR}, #{deptId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.coderman.backend.system.model.User">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="deptId != null">
                dept_id,
            </if>
            <if test="type != null">
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=CHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                #{deptId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.coderman.backend.system.model.User">
        update t_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.coderman.backend.system.model.User">
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=CHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <!-- 批量删除-->
    <delete id="delete">
        DELETE FROM t_user where id in
        <foreach collection="array" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <!-- 根据用户名获取用户-->
    <select id="selectByUsername" parameterType="string" resultMap="BaseResultMap" useCache="false">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where username=#{username}
    </select>
    <!-- 模糊查询 -->
    <select id="query" parameterType="com.coderman.backend.system.model.User" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        <where>
            <if test="username!=null and username!=''">
                and username like "%"#{username}"%"
            </if>
            <if test="mobile!=null and mobile!=''">
                and mobile like "%"#{mobile}"%"
            </if>
            <if test="email!=null and email!=''">
                and email like "%"#{email}"%"
            </if>
            <if test="status!=null and status!=''">
                and status=#{status}
            </if>
            <if test="sex!=null and sex!=''">
                and sex=#{sex}
            </if>
            <if test="deptId!=null and deptId!=''">
                and dept_id=#{deptId}
            </if>
        </where>
    </select>
    <!-- 校验用户名
     如果:id!=null (查看该用户名的人数,不包括当前用户,用于修改时用户名校验)
     如果:id==null (查看该用户名的人数,用于添加时用户名校验)
     -->
    <select id="checkByUsername"  resultType="int">
        select IFNULL(count(1),0)
        from t_user
        <where>
            <if test="username!=null and username!=''">
                and username=#{username}
            </if>
            <if test="id!=null">
               and id !=#{id}
            </if>
        </where>
    </select>
    <select id="checkByEmail"  resultType="int" >
        select IFNULL(count(1),0)
        from t_user
        <where>
            <if test="email!=null and email!=''">
                and email=#{email}
            </if>
            <if test="id!=null">
                and id !=#{id}
            </if>
        </where>
    </select>
    <select id="checkMobile" resultType="int" >
         select IFNULL(count(1),0)
        from t_user
        <where>
            <if test="mobile!=null and mobile!=''">
                and mobile=#{mobile}
            </if>
            <if test="id!=null">
                and id !=#{id}
            </if>
        </where>
    </select>

    <!-- 关联用户和角色-->
    <insert id="assignedRoleList">
        insert into t_user_role (user_id,role_id)
        values
        <foreach collection="roleIdList" item="roleId" separator=",">
            (
            #{userId,jdbcType=BIGINT},
            #{roleId,jdbcType=BIGINT}
            )
        </foreach>
    </insert>

    <!-- 根据用户id查询用户的角色集合-->
    <select id="queryRolesById" resultType="Long" useCache="false">
        select
        role_id
        from t_user_role
        where user_id=#{userId}
    </select>

</mapper>
