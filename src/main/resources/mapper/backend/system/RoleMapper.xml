<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coderman.backend.system.mapper.RoleMapper">

  <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

  <resultMap id="BaseResultMap" type="com.coderman.backend.system.model.Role">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_name, remark, create_time, modify_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.coderman.backend.system.model.Role" keyProperty="id" useGeneratedKeys="true">
    insert into t_role (id, role_name, remark,
      create_time, modify_time)
    values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.coderman.backend.system.model.Role">
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.coderman.backend.system.model.Role">
    update t_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coderman.backend.system.model.Role">
    update t_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="query" parameterType="com.coderman.backend.system.model.Role" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_role
    <where>
      <if test="roleName!=null and roleName!=''">
        and role_name like "%"#{roleName}"%"
      </if>
    </where>
  </select>

  <delete id="delete">
    DELETE FROM t_role where id in
    <foreach collection="array" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>

  <select id="checkByRoleName"  resultType="int">
    select IFNULL(count(1),0)
    from t_role
    <where>
      <if test="roleName!=null and roleName!=''">
        and role_name=#{roleName}
      </if>
      <if test="id!=null">
        and id !=#{id}
      </if>
    </where>
  </select>

  <select id="listAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_role
  </select>


  <select id="findUserRole" resultMap="BaseResultMap" useCache="false">
        SELECT
            r.*
        FROM
            t_role r
        LEFT JOIN t_user_role ur ON (r.id = ur.role_id)
        LEFT JOIN t_user u ON (u.id = ur.user_id)
        WHERE
            u.username = #{username}
    </select>

  <delete id="clearMenuList">
    delete from t_role_menu
    where role_id=#{id}
  </delete>

  <!-- 关联用户和角色-->
  <insert id="roleAuthorization">
    insert into t_role_menu (role_id,menu_id)
    values
    <foreach collection="menuIdList" item="menuId" separator=",">
      (
      #{roleId,jdbcType=BIGINT},
      #{menuId,jdbcType=BIGINT}
      )
    </foreach>
  </insert>

  <select id="queryMenusById" resultType="Long" useCache="false">
        select
        menu_id
        from t_role_menu
        where role_id=#{roleId}
    </select>

</mapper>
